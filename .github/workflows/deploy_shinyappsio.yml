name: R-CMD-check and deploy

on:
   push:
     branches: 
      - master
   
jobs:
  build:
     runs-on: ubuntu-latest
     container:
       image: rocker/geospatial
     env:
       R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
       working-directory: ./covid.traffic.trends
       r-version: 4.0.2
     steps:
      - uses: actions/checkout@v2

      - name: Query dependencies
        working-directory: ${{ env.working-directory }}
        run: |
          install.packages('remotes')
          saveRDS(remotes::dev_package_deps(dependencies = TRUE), "../.github/depends.Rds", version = 2)
        shell: Rscript {0}

      - name: Cache R packages
        uses: actions/cache@v1
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-r-${{ env.r-version }}-1-${{ hashFiles('.github/depends.Rds') }}
          restore-keys: ${{ runner.os }}-r-${{ env.r-version }}-1

      - name: Install system dependencies
        working-directory: ${{ env.working-directory }}
        env:
          RHUB_PLATFORM: linux-x86_64-ubuntu-gcc
        run: |
          Rscript -e "remotes::install_github('r-hub/sysreqs')"
          sysreqs=$(Rscript -e "cat(sysreqs::sysreq_commands('DESCRIPTION'))")
          sudo -s eval "$sysreqs"

      - name: Install dependencies
        working-directory: ${{ env.working-directory }}
        run: |
          remotes::install_deps(dependencies = TRUE)
          remotes::install_cran("rcmdcheck")
        shell: Rscript {0}

      - name: Check
        working-directory: ${{ env.working-directory }}
        env:
          _R_CHECK_CRAN_INCOMING_REMOTE_: false
          CI: true
        run: rcmdcheck::rcmdcheck(args = c("--no-manual", "--as-cran"), error_on = "error", check_dir = "check")
        shell: Rscript {0}

      - name: Upload check results
        if: failure()
        uses: actions/upload-artifact@master
        with:
          name: ${{ runner.os }}-r${{ env.r-version }}-results
          path: check
      - name: Deploy app
        working-directory: ${{ env.working-directory }}
        env:
          SHINYAPPSIO_TOKEN: ${{ secrets.SHINYAPPSIO_TOKEN }}
          SHINYAPPSIO_SECRET: ${{ secrets.SHINYAPPSIO_SECRET }}
        run: |
         bash ./entrypoint.sh
